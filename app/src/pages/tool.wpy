<style lang="less">
  .userinfo {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .userinfo-avatar {
    width: 80rpx;
    height: 80rpx;
    border-radius: 50%;
  }

  .userinfo-nickname {
    color: #aaa;
  }

  .icon{
    width: 180rpx;
    height: 180rpx;
    border-radius: 90rpx;
    border: 1px solid yellow;
  }

  .flex{
    width: 100%;
    display: flex;
    flex-direction: row;
  }
</style>
<template>
  <view class="container">
    <!-- <view class="userinfo" @tap="handleViewTap">
      <image class="userinfo-avatar" src="{{ userInfo.avatarUrl }}" background-size="cover"/>
      <view class="userinfo-nickname">{{ userInfo.nickName }}</view>
    </view> -->

    <panel>
      <view class="title" slot="title">计算器</view>
      <!-- <list></list> -->
      <!-- <view>{{JSON.stringify(daytime)}}</view> -->
      <view class="" style="padding: 0 20rpx;">
        <text class="section__title">在线时间</text>
        <!-- <picker-view indicator-style="height: 50px;" style="width: 100%; height: 300px;" value="{{value}}" bindchange="bindChange">
          <picker-view-column>
            <view wx:for="{{daytime}}" style="line-height: 50px">{{item.val}}小时</view>
          </picker-view-column>
        </picker-view> -->
        <comradio :radioItems="daytime" @radioChange.user="radioChange"/>
      </view>

      <view style="padding: 20rpx 30%;" >
        <button type="primary" bindtap="gen">计算</button>
      </view>
      
    </panel>

    <toast />
  </view>
</template>

<script>
  import wepy from 'wepy'
  // import List from '../components/list'
  import Panel from '../components/panel'
   import ComRadio from '../components/comRadio'
  // import Counter from '../components/counter'
  // import Group from '../components/group'
  import Toast from 'wepy-com-toast'
  import testMixin from '../mixins/test'

  export default class Tool extends wepy.page {
    config = {
      navigationBarTitleText: 'tool'
    }
    components = {
      panel: Panel,
      comradio: ComRadio,
      // counter1: Counter,
      // counter2: Counter,
      // list: List,
      // group: Group,
      toast: Toast
    }

    mixins = [testMixin]

    data = {
      mynum: 20,
      daytime: {
        id: 'd1',
        list: [
          {name: '0-2'},
          {name: '2-4'},
          {name: '4-8'},
          {name: '>8'}
        ]
      }
    }

    computed = {
      now () {
        return +new Date()
      }
    }

    methods = {
      radioChange(e){
        console.log(e)
      },
      gen () {
        wepy.setStorageSync('owner', {
          test: true,
          val: 9999988
        })
        this.$switch('./info', {})
      },
      toast () {
        let promise = this.$invoke('toast', 'show', {
          title: '自定义标题',
          img: 'https://raw.githubusercontent.com/kiinlam/wetoast/master/images/star.png'
        })

        promise.then((d) => {
          console.log('toast done')
        })
      },
      tap () {
        console.log('do noting from ' + this.$name)
      },
      showDetail (e) {
        console.log(e.currentTarget.id)
        this.$navigate('./detail', {a: 1, b: 2, id: e.currentTarget.id})
        // console.log(e) navigate redirect
      },
      communicate () {
        console.log(this.$name + ' tap')

        this.$invoke('counter2', 'minus', 45, 6)
        this.$invoke('counter1', 'plus', 45, 6)

        this.$broadcast('index-broadcast', 1, 3, 4)
      },
      request () {
        let self = this
        let i = 10
        let map = ['MA==', 'MQo=', 'Mg==', 'Mw==', 'NA==', 'NQ==', 'Ng==', 'Nw==', 'OA==', 'OQ==']
        while (i--) {
          wepy.request({
            url: 'https://www.madcoder.cn/tests/sleep.php?time=1&t=css&c=' + map[i] + '&i=' + i,
            success: function (d) {
              self.netrst += d.data + '.'
              self.$apply()
            }
          })
        }
      },
      counterEmit (...args) {
        let $event = args[args.length - 1]
        console.log(`${this.$name} receive ${$event.name} from ${$event.source.$name}`)
      }
    }

    events = {
      'index-emit': (...args) => {
        let $event = args[args.length - 1]
        console.log(`${this.$name} receive ${$event.name} from ${$event.source.$name}`)
      }
    }

    onLoad() {
      let self = this
      this.$parent.getUserInfo(function (userInfo) {
        if (userInfo) {
          self.userInfo = userInfo
        }
        self.normalTitle = '标题已被修改'

        self.setTimeoutTitle = '标题三秒后会被修改'
        setTimeout(() => {
          self.setTimeoutTitle = '到三秒了'
          self.$apply()
        }, 3000)

        self.$apply()
      })
    }
  }
</script>
